package Test;

import static org.junit.Assert.*;

import java.text.ParseException;
import java.util.ArrayList;

import javax.xml.xpath.XPathExpressionException;

import org.junit.Test;

import DnBXmlMappers.DnBDataUpdateMapper;
import Domain.DnBData;

public class TestDnBDataUpdateMapper {

	@Test
	public void test() 
	{
		String testInput = "<GLBLMNSVCMSGSRSV1 xmlns:ns2=\"http://www.dnb.com/DNB_WebServices/Providers/GetNotifications\"><GETNTFCTRNRS><STATUS><CODE>0</CODE><SEVERITY>INFO</SEVERITY></STATUS><GETNTFCRS><REQ_ID>36136415</REQ_ID><USERRS><USERID>unit4test</USERID><PFLRS><ArrayOfPFLRSItem><PROD_NME>Enterprise Management</PROD_NME><NTFC_LVL>level 3</NTFC_LVL><PFL_NME>Enterprise Management product</PFL_NME><REGNRS><ArrayOfREGNRSItem><DUNS_NBR>210084058</DUNS_NBR><CTRY_CD>GB</CTRY_CD><PRIM_NME>PERFORM GROUP PLC</PRIM_NME><NTFCRS><ArrayOfNTFCRSItem><DETECT_DT>2013-05-04T00:24:38-04:00</DETECT_DT><SRC_DT>2013-05-03T08:24:47-04:00</SRC_DT><PAYD_SCR>99</PAYD_SCR></ArrayOfNTFCRSItem><ArrayOfNTFCRSItem><DETECT_DT>2013-05-04T00:24:38-04:00</DETECT_DT><SRC_DT>2013-05-03T08:24:47-04:00</SRC_DT><OUT_BUS_IND>Y</OUT_BUS_IND></ArrayOfNTFCRSItem></NTFCRS><MON_PROD_RS><ArrayOfMON_PROD_RSItem><DUNS_NBR>210084058</DUNS_NBR><PRIM_NME>PERFORM GROUP PLC</PRIM_NME><ADR_LINE>PLANE TREE CRESCENT</ADR_LINE><POST_TOWN>FELTHAM</POST_TOWN><PRIM_GEO_AREA>MIDDLESEX</PRIM_GEO_AREA><POST_CODE>TW13 7JJ</POST_CODE><CTRY_CD>GB</CTRY_CD><BR_IND>N</BR_IND><ACT_PAY>18076000</ACT_PAY><ACT_REC>23003000</ACT_REC><AUDT_IND>Y</AUDT_IND><AVG_HIGH_CR>6051</AVG_HIGH_CR><BUS_REGN_NBR>6324278</BUS_REGN_NBR><BUS_REGN_NBR_TYPE_CD>AEB</BUS_REGN_NBR_TYPE_CD><CASH_LIQ_ASET>33605000</CASH_LIQ_ASET><CLM_IND>N</CLM_IND><CRCY_CD>GBP</CRCY_CD><CRIM_IND>N</CRIM_IND><CURR_RATO>.9</CURR_RATO><DNB_RATG>N1</DNB_RATG><DOM_ULT_CTRY_CD>GB</DOM_ULT_CTRY_CD><DOM_ULT_PNT_DUNS>210084058</DOM_ULT_PNT_DUNS><DOM_ULT_PNT_NME>PERFORM GROUP PLC</DOM_ULT_PNT_NME><DSTR_IND>N</DSTR_IND><FAIL_SCR>1508</FAIL_SCR><FAIL_SCR_CMTY>BG/N81</FAIL_SCR_CMTY><FAIL_SCR_NATL_PCTG>97</FAIL_SCR_NATL_PCTG><FAX_NBR>020-8484-0808</FAX_NBR><FISC_IND>Y</FISC_IND><GBL_ULT_CTRY_CD>GB</GBL_ULT_CTRY_CD><GBL_ULT_PNT_DUNS>210084058</GBL_ULT_PNT_DUNS><GBL_ULT_PNT_NME>PERFORM GROUP PLC</GBL_ULT_PNT_NME><HIGH_CR>10000</HIGH_CR><IMPT_IND>Y</IMPT_IND><INCM_STMT_DT>20121231</INCM_STMT_DT><INTL_DLNG_CD>44</INTL_DLNG_CD><LOCN_STAT>HQ</LOCN_STAT><MAX_CR>3667000</MAX_CR><NET_INCM>12840000</NET_INCM><NET_WRTH>169019000</NET_WRTH><OPRG_SPEC_EVNT_IND>Y</OPRG_SPEC_EVNT_IND><OTHR_SPEC_EVNT_IND>Y</OTHR_SPEC_EVNT_IND><OUT_BUS_IND>Y</OUT_BUS_IND><PAYD_3_MO_AGO>62</PAYD_3_MO_AGO><PAYD_NORM>75</PAYD_NORM><PAYD_SCR>66</PAYD_SCR><PNT_CTRY_CD>GB</PNT_CTRY_CD><PNT_DUNS>210084058</PNT_DUNS><PNT_NME>PERFORM GROUP PLC</PNT_NME><PREV_NET_WRTH>132704000</PREV_NET_WRTH><PREV_SLS>103194000</PREV_SLS><PREV_STMT_DT>20111231</PREV_STMT_DT><PRIM_SIC>7319</PRIM_SIC><PRIM_SIC_TYPE_CD>1972</PRIM_SIC_TYPE_CD><QK_RATO>0.6</QK_RATO><SCRD_FLNG_IND>Y</SCRD_FLNG_IND><SLS>151607000</SLS><STAT>1</STAT><STMT_DT>20121231</STMT_DT><CONS_IND>C</CONS_IND><ESTD_IND>N</ESTD_IND><BUS_STRU>N</BUS_STRU><STRT_YR>2007</STRT_YR><SUIT_JDGT_IND>N</SUIT_JDGT_IND><TLCM_NBR>02084840800</TLCM_NBR><TOT_CURR_ASET>83945000</TOT_CURR_ASET><ITNG_ASET>208701000</ITNG_ASET><TOT_ASET>300403000</TOT_ASET><TOT_CURR_LIAB>98697000</TOT_CURR_LIAB><TOT_LIAB>131384000</TOT_LIAB><TRDG_STYL>Perform</TRDG_STYL><UBAL_IND>N</UBAL_IND><ENQ_DUNS>210084058</ENQ_DUNS><PRIN_NME>Herman Siegfried Jorg Mohaupt</PRIN_NME><PRIN_TTL>Director</PRIN_TTL><TOT_PMT>5</TOT_PMT><FINL_EMBT_IND>N</FINL_EMBT_IND><FINL_LGL_EVNT_IND>N</FINL_LGL_EVNT_IND><LGL_FORM>LSC/125</LGL_FORM><CACHE_IND>N</CACHE_IND><FAIL_SCR_ENTR/><DELQ_SCR_ENTR/></ArrayOfMON_PROD_RSItem></MON_PROD_RS></ArrayOfREGNRSItem></REGNRS></ArrayOfPFLRSItem></PFLRS></USERRS></GETNTFCRS></GETNTFCTRNRS></GLBLMNSVCMSGSRSV1>";
		
		DnBDataUpdateMapper mapper = new DnBDataUpdateMapper();
		
		ArrayList<DnBData> data = new ArrayList<DnBData>();
		try {
			data = mapper.getDnBDataFromXml(testInput);
		} catch (XPathExpressionException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		assertEquals("Length of data collection is 1", 1, data.size());
		assertEquals("Name is PERFORM GROUP PLC", "PERFORM GROUP PLC", data.get(0).getName());
		assertEquals("DBRating is empty", 0, data.get(0).getDbratingHistory().size());
		assertEquals("FailureRisk is empty", 0, data.get(0).getFailureRiskScoreHistory().size());
		assertTrue("Paydex is 99", 99 == data.get(0).getPaydexScoreHistory().getCurrent().getValue());
		assertEquals("Paydex Norm is empty", 0, data.get(0).getPaydexNormHistory().size());
		assertEquals("Out of business indicator is true", true, data.get(0).getOutOfBusiness());
	}
	
	@Test
	public void testGetResultTicket()
	{
		String testInput = "<GLBLMNSVCMSGSRSV1 xmlns:ns2=\"http://www.dnb.com/DNB_WebServices/Providers/GetNotifications\"><GETNTFCTRNRS><RSLT_TKT>3252103</RSLT_TKT><STATUS><CODE>0</CODE><SEVERITY>INFO</SEVERITY></STATUS><GETNTFCRS><REQ_ID>36136415</REQ_ID><USERRS><USERID>unit4test</USERID><PFLRS><ArrayOfPFLRSItem><PROD_NME>Enterprise Management</PROD_NME><NTFC_LVL>level 3</NTFC_LVL><PFL_NME>Enterprise Management product</PFL_NME><REGNRS><ArrayOfREGNRSItem><DUNS_NBR>210084058</DUNS_NBR><CTRY_CD>GB</CTRY_CD><PRIM_NME>PERFORM GROUP PLC</PRIM_NME><NTFCRS><ArrayOfNTFCRSItem><DETECT_DT>2013-05-04T00:24:38-04:00</DETECT_DT><SRC_DT>2013-05-03T08:24:47-04:00</SRC_DT><PAYD_SCR>99</PAYD_SCR></ArrayOfNTFCRSItem></NTFCRS><MON_PROD_RS><ArrayOfMON_PROD_RSItem><DUNS_NBR>210084058</DUNS_NBR><PRIM_NME>PERFORM GROUP PLC</PRIM_NME><ADR_LINE>PLANE TREE CRESCENT</ADR_LINE><POST_TOWN>FELTHAM</POST_TOWN><PRIM_GEO_AREA>MIDDLESEX</PRIM_GEO_AREA><POST_CODE>TW13 7JJ</POST_CODE><CTRY_CD>GB</CTRY_CD><BR_IND>N</BR_IND><ACT_PAY>18076000</ACT_PAY><ACT_REC>23003000</ACT_REC><AUDT_IND>Y</AUDT_IND><AVG_HIGH_CR>6051</AVG_HIGH_CR><BUS_REGN_NBR>6324278</BUS_REGN_NBR><BUS_REGN_NBR_TYPE_CD>AEB</BUS_REGN_NBR_TYPE_CD><CASH_LIQ_ASET>33605000</CASH_LIQ_ASET><CLM_IND>N</CLM_IND><CRCY_CD>GBP</CRCY_CD><CRIM_IND>N</CRIM_IND><CURR_RATO>.9</CURR_RATO><DNB_RATG>N1</DNB_RATG><DOM_ULT_CTRY_CD>GB</DOM_ULT_CTRY_CD><DOM_ULT_PNT_DUNS>210084058</DOM_ULT_PNT_DUNS><DOM_ULT_PNT_NME>PERFORM GROUP PLC</DOM_ULT_PNT_NME><DSTR_IND>N</DSTR_IND><FAIL_SCR>1508</FAIL_SCR><FAIL_SCR_CMTY>BG/N81</FAIL_SCR_CMTY><FAIL_SCR_NATL_PCTG>97</FAIL_SCR_NATL_PCTG><FAX_NBR>020-8484-0808</FAX_NBR><FISC_IND>Y</FISC_IND><GBL_ULT_CTRY_CD>GB</GBL_ULT_CTRY_CD><GBL_ULT_PNT_DUNS>210084058</GBL_ULT_PNT_DUNS><GBL_ULT_PNT_NME>PERFORM GROUP PLC</GBL_ULT_PNT_NME><HIGH_CR>10000</HIGH_CR><IMPT_IND>Y</IMPT_IND><INCM_STMT_DT>20121231</INCM_STMT_DT><INTL_DLNG_CD>44</INTL_DLNG_CD><LOCN_STAT>HQ</LOCN_STAT><MAX_CR>3667000</MAX_CR><NET_INCM>12840000</NET_INCM><NET_WRTH>169019000</NET_WRTH><OPRG_SPEC_EVNT_IND>Y</OPRG_SPEC_EVNT_IND><OTHR_SPEC_EVNT_IND>Y</OTHR_SPEC_EVNT_IND><OUT_BUS_IND>N</OUT_BUS_IND><PAYD_3_MO_AGO>62</PAYD_3_MO_AGO><PAYD_NORM>75</PAYD_NORM><PAYD_SCR>66</PAYD_SCR><PNT_CTRY_CD>GB</PNT_CTRY_CD><PNT_DUNS>210084058</PNT_DUNS><PNT_NME>PERFORM GROUP PLC</PNT_NME><PREV_NET_WRTH>132704000</PREV_NET_WRTH><PREV_SLS>103194000</PREV_SLS><PREV_STMT_DT>20111231</PREV_STMT_DT><PRIM_SIC>7319</PRIM_SIC><PRIM_SIC_TYPE_CD>1972</PRIM_SIC_TYPE_CD><QK_RATO>0.6</QK_RATO><SCRD_FLNG_IND>Y</SCRD_FLNG_IND><SLS>151607000</SLS><STAT>1</STAT><STMT_DT>20121231</STMT_DT><CONS_IND>C</CONS_IND><ESTD_IND>N</ESTD_IND><BUS_STRU>N</BUS_STRU><STRT_YR>2007</STRT_YR><SUIT_JDGT_IND>N</SUIT_JDGT_IND><TLCM_NBR>02084840800</TLCM_NBR><TOT_CURR_ASET>83945000</TOT_CURR_ASET><ITNG_ASET>208701000</ITNG_ASET><TOT_ASET>300403000</TOT_ASET><TOT_CURR_LIAB>98697000</TOT_CURR_LIAB><TOT_LIAB>131384000</TOT_LIAB><TRDG_STYL>Perform</TRDG_STYL><UBAL_IND>N</UBAL_IND><ENQ_DUNS>210084058</ENQ_DUNS><PRIN_NME>Herman Siegfried Jorg Mohaupt</PRIN_NME><PRIN_TTL>Director</PRIN_TTL><TOT_PMT>5</TOT_PMT><FINL_EMBT_IND>N</FINL_EMBT_IND><FINL_LGL_EVNT_IND>N</FINL_LGL_EVNT_IND><LGL_FORM>LSC/125</LGL_FORM><CACHE_IND>N</CACHE_IND><FAIL_SCR_ENTR/><DELQ_SCR_ENTR/></ArrayOfMON_PROD_RSItem></MON_PROD_RS></ArrayOfREGNRSItem></REGNRS></ArrayOfPFLRSItem></PFLRS></USERRS></GETNTFCRS></GETNTFCTRNRS></GLBLMNSVCMSGSRSV1>";

		DnBDataUpdateMapper mapper = new DnBDataUpdateMapper();
		
		assertEquals("Result ticket should be 3252103", "3252103", mapper.getResultTicket(testInput));
	}
	
	@Test
	public void testRiskIndicatorUndefined() 
	{
		String testInput = "<GLBLMNSVCMSGSRSV1 xmlns:ns2=\"http://www.dnb.com/DNB_WebServices/Providers/GetNotifications\"><GETNTFCTRNRS><STATUS><CODE>0</CODE><SEVERITY>INFO</SEVERITY></STATUS><GETNTFCRS><REQ_ID>36136415</REQ_ID><USERRS><USERID>unit4test</USERID><PFLRS><ArrayOfPFLRSItem><PROD_NME>Enterprise Management</PROD_NME><NTFC_LVL>level 3</NTFC_LVL><PFL_NME>Enterprise Management product</PFL_NME><REGNRS><ArrayOfREGNRSItem><DUNS_NBR>210084058</DUNS_NBR><CTRY_CD>GB</CTRY_CD><PRIM_NME>PERFORM GROUP PLC</PRIM_NME><NTFCRS><ArrayOfNTFCRSItem><DETECT_DT>2013-05-04T00:24:38-04:00</DETECT_DT><SRC_DT>2013-05-03T08:24:47-04:00</SRC_DT><DNB_RATG>4A-</DNB_RATG></ArrayOfNTFCRSItem></NTFCRS><MON_PROD_RS><ArrayOfMON_PROD_RSItem><DUNS_NBR>210084058</DUNS_NBR><PRIM_NME>PERFORM GROUP PLC</PRIM_NME><ADR_LINE>PLANE TREE CRESCENT</ADR_LINE><POST_TOWN>FELTHAM</POST_TOWN><PRIM_GEO_AREA>MIDDLESEX</PRIM_GEO_AREA><POST_CODE>TW13 7JJ</POST_CODE><CTRY_CD>GB</CTRY_CD><BR_IND>N</BR_IND><ACT_PAY>18076000</ACT_PAY><ACT_REC>23003000</ACT_REC><AUDT_IND>Y</AUDT_IND><AVG_HIGH_CR>6051</AVG_HIGH_CR><BUS_REGN_NBR>6324278</BUS_REGN_NBR><BUS_REGN_NBR_TYPE_CD>AEB</BUS_REGN_NBR_TYPE_CD><CASH_LIQ_ASET>33605000</CASH_LIQ_ASET><CLM_IND>N</CLM_IND><CRCY_CD>GBP</CRCY_CD><CRIM_IND>N</CRIM_IND><CURR_RATO>.9</CURR_RATO><DNB_RATG>N1</DNB_RATG><DOM_ULT_CTRY_CD>GB</DOM_ULT_CTRY_CD><DOM_ULT_PNT_DUNS>210084058</DOM_ULT_PNT_DUNS><DOM_ULT_PNT_NME>PERFORM GROUP PLC</DOM_ULT_PNT_NME><DSTR_IND>N</DSTR_IND><FAIL_SCR>1508</FAIL_SCR><FAIL_SCR_CMTY>BG/N81</FAIL_SCR_CMTY><FAIL_SCR_NATL_PCTG>97</FAIL_SCR_NATL_PCTG><FAX_NBR>020-8484-0808</FAX_NBR><FISC_IND>Y</FISC_IND><GBL_ULT_CTRY_CD>GB</GBL_ULT_CTRY_CD><GBL_ULT_PNT_DUNS>210084058</GBL_ULT_PNT_DUNS><GBL_ULT_PNT_NME>PERFORM GROUP PLC</GBL_ULT_PNT_NME><HIGH_CR>10000</HIGH_CR><IMPT_IND>Y</IMPT_IND><INCM_STMT_DT>20121231</INCM_STMT_DT><INTL_DLNG_CD>44</INTL_DLNG_CD><LOCN_STAT>HQ</LOCN_STAT><MAX_CR>3667000</MAX_CR><NET_INCM>12840000</NET_INCM><NET_WRTH>169019000</NET_WRTH><OPRG_SPEC_EVNT_IND>Y</OPRG_SPEC_EVNT_IND><OTHR_SPEC_EVNT_IND>Y</OTHR_SPEC_EVNT_IND><OUT_BUS_IND>N</OUT_BUS_IND><PAYD_3_MO_AGO>62</PAYD_3_MO_AGO><PAYD_NORM>75</PAYD_NORM><PAYD_SCR>66</PAYD_SCR><PNT_CTRY_CD>GB</PNT_CTRY_CD><PNT_DUNS>210084058</PNT_DUNS><PNT_NME>PERFORM GROUP PLC</PNT_NME><PREV_NET_WRTH>132704000</PREV_NET_WRTH><PREV_SLS>103194000</PREV_SLS><PREV_STMT_DT>20111231</PREV_STMT_DT><PRIM_SIC>7319</PRIM_SIC><PRIM_SIC_TYPE_CD>1972</PRIM_SIC_TYPE_CD><QK_RATO>0.6</QK_RATO><SCRD_FLNG_IND>Y</SCRD_FLNG_IND><SLS>151607000</SLS><STAT>1</STAT><STMT_DT>20121231</STMT_DT><CONS_IND>C</CONS_IND><ESTD_IND>N</ESTD_IND><BUS_STRU>N</BUS_STRU><STRT_YR>2007</STRT_YR><SUIT_JDGT_IND>N</SUIT_JDGT_IND><TLCM_NBR>02084840800</TLCM_NBR><TOT_CURR_ASET>83945000</TOT_CURR_ASET><ITNG_ASET>208701000</ITNG_ASET><TOT_ASET>300403000</TOT_ASET><TOT_CURR_LIAB>98697000</TOT_CURR_LIAB><TOT_LIAB>131384000</TOT_LIAB><TRDG_STYL>Perform</TRDG_STYL><UBAL_IND>N</UBAL_IND><ENQ_DUNS>210084058</ENQ_DUNS><PRIN_NME>Herman Siegfried Jorg Mohaupt</PRIN_NME><PRIN_TTL>Director</PRIN_TTL><TOT_PMT>5</TOT_PMT><FINL_EMBT_IND>N</FINL_EMBT_IND><FINL_LGL_EVNT_IND>N</FINL_LGL_EVNT_IND><LGL_FORM>LSC/125</LGL_FORM><CACHE_IND>N</CACHE_IND><FAIL_SCR_ENTR/><DELQ_SCR_ENTR/></ArrayOfMON_PROD_RSItem></MON_PROD_RS></ArrayOfREGNRSItem></REGNRS></ArrayOfPFLRSItem></PFLRS></USERRS></GETNTFCRS></GETNTFCTRNRS></GLBLMNSVCMSGSRSV1>";
		
		DnBDataUpdateMapper mapper = new DnBDataUpdateMapper();
		
		ArrayList<DnBData> data = new ArrayList<DnBData>();
		try {
			data = mapper.getDnBDataFromXml(testInput);
		} catch (XPathExpressionException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		assertEquals("Length of data collection is 1", 1, data.size());
		assertEquals("DnBrating is 4A-", "4A-", data.get(0).getCurrentRating().getRating());
		assertEquals("DBRating is undetermined, value should be ???", -1, data.get(0).getCurrentRating().getRiskIndicator());
	}

}
